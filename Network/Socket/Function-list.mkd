### bzero, bcopy, bcmp

```
#include <strings.h>
void bzero(void *s, size_t n);
int bcmp(const void *s1, const void *s2, size_t n);
void bcopy(const void *src, void *dest, size_t n);
```

code

```
#include <string.h>
#include <stdio.h>

int
main (int argc,
      char *argv[])
{
  int i;
  char str1[] = "hello world";
  char str2[] = "hello test";

  printf ("bcmp : %d\n", bcmp(str1, str2, 5));
  printf ("bcmp : %d\n", bcmp(str1, str2, 7));

  bzero(str1,5);
  for (i=0; i<11; i++)
    {
      if (str1[i] == 0)
        printf("%d", i);
      else {
        putchar(str1[i]);
      }
    }
  printf("\n");

  bcopy(str2, str1, 5);
  printf("str1: %s\n", str1);

  return 0;
}
```


### memset, memcpy, memcmp

```
#include <string.h>
void *memset(void *s, int c, size_t n);
void *memcpy(void *s1, const void *s2, size_t n);
int memcmp(const void *s1, const void *s2, size_t n);
```

code

```
#include <string.h>
#include <stdio.h>

int
main (int argc,
      char *argv[])
{
  int i;
  char str1[] = "hello world";
  char str2[] = "hello test";

  printf ("bcmp : %d\n", memcmp(str1, str2, 5));
  printf ("bcmp : %d\n", memcmp(str1, str2, 7));

  memset(str1, 0, 5);
  for (i=0; i<11; i++)
    {
      if (str1[i] == 0)
        printf("%d", i);
      else {
        putchar(str1[i]);
      }
    }
  printf("\n");

  memcpy(str1, str2, 5);
  printf("str1: %s\n", str1);

  return 0;
}
```

inet_aton

inet_addr

inet_ntoa



gethostbyname

gethostbyaddr

uname
gethostname


socket

bind

getsockname

getpeername

listen

accept

connect

close

shutdown
